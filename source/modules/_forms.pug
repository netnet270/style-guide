//-------------------------------------------------------
//- Modules :: Forms
//-------------------------------------------------------

//- Input Field
mixin input-field({ type, placeholder, value })
  input.form-control(
    type= type ? type : 'text'
    placeholder= placeholder ? placeholder : null
    value= value ? value : null
  )

mixin group-input-field({label, id, type, placeholder, value, size, require, iconBefore, iconAfter, noteText, noticeError, disabled})
  .form-group.form-customize(
    class= disabled ? `form-control__${disabled}` : null
    class= noticeError ? `form-error` : null
  )
    label(
      for= id ? id : null
    )= label
      if require
        span.require *
    .input-field(
      class= type ? `input-field--${type}`: null
      class= iconBefore ? `input-field--icon-before`: null
      class= iconAfter ? `input-field--icon-toggle`: null
      class= (iconBefore && iconAfter) ? `input-field--show-icon` : null
    )
      if iconBefore
        span.input-field__icon.input-field__icon--before
          i(class= "ion-ios-email-outline")
      input.form-control(
        type= type ? type : 'text'
        placeholder= placeholder ? placeholder : null
        value= value ? value : null,
        disabled= disabled ? disabled : null
      )
      if iconAfter
        span.input-field__icon.input-field__icon--after.js-toggle-icon
          i(class= "ion-ios-eye-outline")
    if noteText
      p.note-text= noteText
    if noticeError
      p.error-notice
        i(class= "error-notice__icon ion-close-circled")
        | #{noticeError}

mixin group-input-field-readonly({ label, value })
  .form-group.form-customize&attributes(attributes)
    label= label
    input.form-control(
      type='text'
      value= value ? value : null
      readonly
    )

//- Textarea
mixin group-textarea({ label, require, placeholder, disabled, row })
  .form-group.form-customize.form-textarea
    label= lebel
      if require
        span.require *
    textarea.form-control.form-control--textarea(
      placeholder= placeholder ? placeholder : null
      row= row ? row : null
    )

//- Input Radio
mixin group-input-radio({ name, id, label, value, checked, disabled })
  .form-group.input-radio-custom(class = disabled ? 'input-radio--disabled': null)
    input.input-checkbox(type='radio', name=name, id=id, checked= checked ? 'checked' : null, disabled= disabled ? 'disabled' : null)
    label(for=id)= label

//- Group Input Checkbox
mixin group-input-checkbox({ name, id, label, value, checked , disabled})
  .form-group.input-checkbox-custom(
    class=disabled ? 'input-checkbox--disabled' : null
    class= label ? null : 'input-checkbox-custom--no-label'
  )
  if checked === true
    input.input-checkbox(type='checkbox', name=name, id=id, checked='checked', disabled= disabled ? 'disabled' : null  )
  else
    input.input-checkbox(type='checkbox', name=name, id=id, disabled= disabled ? 'disabled' : null)
  label(for=id)= label

//- Selectbox
mixin selectbox({ id, options, disabled})
  .select-box
    select.custom-select(
      disabled= disabled ? disabled : null
      class=disabled ? `custom-select--${disabled}` : null
    )
      each option, index in options
        option(value=option.value)= option.display

//- Group select option
mixin group-selectbox({ label, id, require, options, disabled})
  .form-group.form-customize
    label(
      for= id ? id : null
    )= label
      if require
        span.require *
    +selectbox({ id, options })

mixin group-input-list-color({ label, id, type, placeholder, value})
  .form-group.form-list-color
    label(
      for= id ? id : null
    )= label
     
    .list-box.d-flex.justify-content-between.align-items-center
      ul.unstyled.list-box__color.d-flex.justify-content-start
        -
          var data = [
            '#373737',
            '#555',
            '#888',
            '#b5b5b5',
            '#f0f0f0',
            '#ff6b00',
            '#e46000',
            '#ff9359',
            '#083ea9',
            '#3471eb',
            '#548dff',
            '#fff',
            '#f05151',
            '#fa8383',
            '#43aa49',
            '#ec3f3f',
            '#4a90e2'
          ];
        each item in data
          li.list-box__item(style=`background-color: ${item}` )
      .list-box__input
        +input-field({ type, placeholder, value })(
          id= id ? id : null
        )
        i(class= "icon-images icon-images--color-picker")